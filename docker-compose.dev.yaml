x-base-engine: &base-engine
  # Base engine for all signal generating engines.
  build:
    context: .
    dockerfile: Dockerfile.dev
    args:
      - BUILD_TAGS=server
  depends_on:
    redis:
      condition: service_healthy
    cryptoquant_init:
      condition: service_completed_successfully
  restart: unless-stopped
  networks:
    - crypto-dev
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
  deploy:
    resources:
      limits:
        memory: 512M

services:
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 5
      start_period: 30s
    ports:
      - 6379:6379
    networks:
      - crypto-dev

  cryptoquant_init:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        - BUILD_TAGS=init
    container_name: cryptoquant_init
    depends_on:
      redis:
        condition: service_healthy
    restart: "no"
    env_file:
      - env/.env.trader
    networks:
      - crypto-dev

  trader:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        - BUILD_TAGS=trader
    container_name: trader
    depends_on:
      redis:
        condition: service_healthy
      cryptoquant_init:
        condition: service_completed_successfully
    restart: unless-stopped
    env_file:
      - env/.env.trader
    networks:
      - crypto-dev
    
# Signal generating engines by each coin
  xrp:
    <<: *base-engine
    container_name: cryptoquant_xrp_dev
    labels:
      engine: xrp
      type: signal
    env_file:
      - env/.env.signal
    environment:
      - ENGINE_NAME=xrp
      - BINANCE_SYMBOL=XRPUSDT
      - UPBIT_SYMBOL=KRW-XRP
      - ANCHOR_SYMBOL=KRW-USDT
      - TRADER_ADDRESS=trader:50051

networks:
  crypto-dev:
    external: true
    name: crypto-dev 